module Exercise3 where
import SetOrd

type Rel a = [(a,a)]

setTranspose :: Ord a => Rel a -> Rel a
setTranpose (x : rel) | (fst x == snd x) = rel 
                      -- | otherwise = (snd x, fst x) : setTranspose rel  

setTranspose [] = []

symClos :: Ord a => Rel a -> Rel a
symClos rel = rel ++ setTranspose rel 
